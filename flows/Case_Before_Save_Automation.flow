<?xml version="1.0" encoding="UTF-8"?>
<Flow xmlns="http://soap.sforce.com/2006/04/metadata">
    <assignments>
        <name>Add_Stopped_Flag</name>
        <label>Add Stopped Flag</label>
        <locationX>3521</locationX>
        <locationY>1679</locationY>
        <assignmentItems>
            <assignToReference>$Record.IsStopped</assignToReference>
            <operator>Assign</operator>
            <value>
                <booleanValue>true</booleanValue>
            </value>
        </assignmentItems>
    </assignments>
    <assignments>
        <name>Assign_Care_Values</name>
        <label>Assign Care Values</label>
        <locationX>1361</locationX>
        <locationY>1806</locationY>
        <assignmentItems>
            <assignToReference>$Record.Has_Entitlement__c</assignToReference>
            <operator>Assign</operator>
            <value>
                <booleanValue>true</booleanValue>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>$Record.Entitlement_Name__c</assignToReference>
            <operator>Assign</operator>
            <value>
                <stringValue>Care</stringValue>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>$Record.EntitlementId</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>CareEntitlement.Id</elementReference>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>Business_Hours_Check</targetReference>
        </connector>
    </assignments>
    <assignments>
        <name>Assign_CarePlus_Values</name>
        <label>Assign Care+ Values</label>
        <locationX>1311</locationX>
        <locationY>1667</locationY>
        <assignmentItems>
            <assignToReference>$Record.Has_Entitlement__c</assignToReference>
            <operator>Assign</operator>
            <value>
                <booleanValue>true</booleanValue>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>$Record.Entitlement_Name__c</assignToReference>
            <operator>Assign</operator>
            <value>
                <stringValue>Care+</stringValue>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>$Record.EntitlementId</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>CarePlus_Entitlement.Id</elementReference>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>Did_the_Status_Change</targetReference>
        </connector>
    </assignments>
    <assignments>
        <name>Assign_Contract_and_Business_Hours</name>
        <label>Assign Contract and Business Hours</label>
        <locationX>895</locationX>
        <locationY>1736</locationY>
        <assignmentItems>
            <assignToReference>$Record.Service_Contract__c</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>varThisIsOurContractLine.ServiceContractId</elementReference>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>$Record.BusinessHoursId</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>varThisIsOurContractLine.Business_Hours_ID__c</elementReference>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>$Record.Has_Entitlement__c</assignToReference>
            <operator>Assign</operator>
            <value>
                <booleanValue>true</booleanValue>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>$Record.Entitlement_Name__c</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>varCareLevel</elementReference>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>What_Entitlement_Level</targetReference>
        </connector>
    </assignments>
    <assignments>
        <name>Assign_Contract_based_on_Custom_Entitlement</name>
        <label>Assign Contract based on Custom Entitlement</label>
        <locationX>962</locationX>
        <locationY>1251</locationY>
        <assignmentItems>
            <assignToReference>$Record.Service_Contract__c</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>Custom_Entitlement.ServiceContractId</elementReference>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>$Record.BusinessHoursId</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>Custom_Entitlement.BusinessHoursId</elementReference>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>$Record.Has_Entitlement__c</assignToReference>
            <operator>Assign</operator>
            <value>
                <booleanValue>true</booleanValue>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>$Record.Entitlement_Name__c</assignToReference>
            <operator>Assign</operator>
            <value>
                <stringValue>Custom</stringValue>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>$Record.EntitlementId</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>Custom_Entitlement.Id</elementReference>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>Did_the_Status_Change</targetReference>
        </connector>
    </assignments>
    <assignments>
        <name>Assign_Old_Value</name>
        <label>Assign Old Value</label>
        <locationX>2557</locationX>
        <locationY>1276</locationY>
        <assignmentItems>
            <assignToReference>$Record.Old_Status__c</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>Prior_Record.Status</elementReference>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>$Record.Old_Status_Detail__c</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>Prior_Record.Status_Detail__c</elementReference>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>$Record.Last_Status_Change__c</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>$Flow.CurrentDateTime</elementReference>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>$Record.Debug__c</assignToReference>
            <operator>Assign</operator>
            <value>
                <stringValue>Status Change Time!</stringValue>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>What_Status</targetReference>
        </connector>
    </assignments>
    <assignments>
        <name>Assign_Parent_Contract_and_Business_Hours</name>
        <label>Assign Parent Contract and Business Hours</label>
        <locationX>895</locationX>
        <locationY>1559</locationY>
        <assignmentItems>
            <assignToReference>$Record.Service_Contract__c</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>Parent_Asset.Contract_Line_Item__r.ServiceContractId</elementReference>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>$Record.BusinessHoursId</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>Parent_Asset.Contract_Line_Item__r.Business_Hours_ID__c</elementReference>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>$Record.Has_Entitlement__c</assignToReference>
            <operator>Assign</operator>
            <value>
                <booleanValue>true</booleanValue>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>varCareLevel</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>Parent_Asset.Service_Level__c</elementReference>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>What_Entitlement_Level</targetReference>
        </connector>
    </assignments>
    <assignments>
        <name>Assign_Standard_Values</name>
        <label>Assign Standard Values</label>
        <locationX>1299</locationX>
        <locationY>1952</locationY>
        <assignmentItems>
            <assignToReference>$Record.Has_Entitlement__c</assignToReference>
            <operator>Assign</operator>
            <value>
                <booleanValue>true</booleanValue>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>$Record.Entitlement_Name__c</assignToReference>
            <operator>Assign</operator>
            <value>
                <stringValue>Standard</stringValue>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>$Record.EntitlementId</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>Standard_Entitlement.Id</elementReference>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>Did_the_Status_Change</targetReference>
        </connector>
    </assignments>
    <assignments>
        <name>Capture_Care_Level</name>
        <label>Capture Care Level</label>
        <locationX>466</locationX>
        <locationY>1950</locationY>
        <assignmentItems>
            <assignToReference>varCareLevel</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>returnTranslatedServiceLevel</elementReference>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>varThisIsOurContractLine</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>Loop_Contract_Lines</elementReference>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>$Record.Debug__c</assignToReference>
            <operator>Add</operator>
            <value>
                <elementReference>varCareLevel</elementReference>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>Loop_Contract_Lines</targetReference>
        </connector>
    </assignments>
    <assignments>
        <name>Capture_Care_U_Specific</name>
        <label>Capture Care+U Specific</label>
        <locationX>505</locationX>
        <locationY>1681</locationY>
        <assignmentItems>
            <assignToReference>varCareLevel</assignToReference>
            <operator>Assign</operator>
            <value>
                <stringValue>Care+</stringValue>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>varThisIsOurContractLine</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>Loop_Contract_Lines</elementReference>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>$Record.Debug__c</assignToReference>
            <operator>Add</operator>
            <value>
                <elementReference>varCareLevel</elementReference>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>Loop_Contract_Lines</targetReference>
        </connector>
    </assignments>
    <assignments>
        <description>clear entitlement, contract but lets leave business hours alone if they exist.</description>
        <name>Clear_asset_related_values</name>
        <label>Clear asset related values</label>
        <locationX>1297</locationX>
        <locationY>911</locationY>
        <assignmentItems>
            <assignToReference>$Record.EntitlementId</assignToReference>
            <operator>Assign</operator>
            <value>
                <stringValue></stringValue>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>$Record.Service_Contract__c</assignToReference>
            <operator>Assign</operator>
            <value>
                <stringValue></stringValue>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>$Record.Debug__c</assignToReference>
            <operator>Assign</operator>
            <value>
                <stringValue>NoAsset</stringValue>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>$Record.Resolution_Milestone_Target_Date__c</assignToReference>
            <operator>Assign</operator>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>$Record.Restore_Milestone_Target_Date__c</assignToReference>
            <operator>Assign</operator>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>$Record.Resolution_Milestone_Target_Date__c</assignToReference>
            <operator>Assign</operator>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>$Record.Has_Entitlement__c</assignToReference>
            <operator>Assign</operator>
            <value>
                <booleanValue>false</booleanValue>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>$Record.Entitlement_Name__c</assignToReference>
            <operator>Assign</operator>
            <value>
                <stringValue></stringValue>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>Did_the_Status_Change</targetReference>
        </connector>
    </assignments>
    <assignments>
        <name>Clear_Entitlement</name>
        <label>Clear Entitlement</label>
        <locationX>1238</locationX>
        <locationY>625</locationY>
        <assignmentItems>
            <assignToReference>$Record.EntitlementId</assignToReference>
            <operator>Assign</operator>
            <value>
                <stringValue></stringValue>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>$Record.Entitlement_Name__c</assignToReference>
            <operator>Assign</operator>
            <value>
                <stringValue></stringValue>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>$Record.Has_Entitlement__c</assignToReference>
            <operator>Assign</operator>
            <value>
                <booleanValue>false</booleanValue>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>Do_we_have_an_Asset</targetReference>
        </connector>
    </assignments>
    <assignments>
        <name>Debug</name>
        <label>Debug</label>
        <locationX>632</locationX>
        <locationY>336</locationY>
        <assignmentItems>
            <assignToReference>$Record.Debug__c</assignToReference>
            <operator>Assign</operator>
            <value>
                <stringValue>It Thinks Its New</stringValue>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>Freebie_or_Billable_Set</targetReference>
        </connector>
    </assignments>
    <assignments>
        <name>Debug_Contract</name>
        <label>Debug Contract</label>
        <locationX>349</locationX>
        <locationY>1408</locationY>
        <assignmentItems>
            <assignToReference>$Record.Debug__c</assignToReference>
            <operator>Assign</operator>
            <value>
                <stringValue>Contract loop</stringValue>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>Loop_Contract_Lines</targetReference>
        </connector>
    </assignments>
    <assignments>
        <name>InProgress_Path</name>
        <label>InProgress Path</label>
        <locationX>3677</locationX>
        <locationY>1440</locationY>
        <assignmentItems>
            <assignToReference>$Record.Debug__c</assignToReference>
            <operator>Assign</operator>
            <value>
                <stringValue>In Progress Path</stringValue>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>Stamp_Date_Time_0_0_0_0_0_0_0</targetReference>
        </connector>
    </assignments>
    <assignments>
        <name>No_Status_Just_Detail</name>
        <label>No Status Just Detail</label>
        <locationX>2370</locationX>
        <locationY>1155</locationY>
        <assignmentItems>
            <assignToReference>$Record.Debug__c</assignToReference>
            <operator>Assign</operator>
            <value>
                <stringValue>No status just detail</stringValue>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>What_Status_Detail</targetReference>
        </connector>
    </assignments>
    <assignments>
        <name>Remove_Stopped_Flag</name>
        <label>Remove Stopped Flag</label>
        <locationX>3557</locationX>
        <locationY>1288</locationY>
        <assignmentItems>
            <assignToReference>$Record.IsStopped</assignToReference>
            <operator>Assign</operator>
            <value>
                <booleanValue>false</booleanValue>
            </value>
        </assignmentItems>
    </assignments>
    <assignments>
        <name>Set_Billable_Entitlement</name>
        <label>Set Billable Entitlement</label>
        <locationX>1353</locationX>
        <locationY>656</locationY>
        <assignmentItems>
            <assignToReference>$Record.Has_Entitlement__c</assignToReference>
            <operator>Assign</operator>
            <value>
                <booleanValue>true</booleanValue>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>$Record.EntitlementId</assignToReference>
            <operator>Assign</operator>
            <value>
                <stringValue>5503r000000k9vmAAA</stringValue>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>$Record.Entitlement_Name__c</assignToReference>
            <operator>Assign</operator>
            <value>
                <stringValue>Billable Service Entitlement</stringValue>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>Did_the_Status_Change</targetReference>
        </connector>
    </assignments>
    <assignments>
        <name>Set_Freebie_Entitlement</name>
        <label>Set Freebie Entitlement</label>
        <locationX>1448</locationX>
        <locationY>753</locationY>
        <assignmentItems>
            <assignToReference>$Record.Has_Entitlement__c</assignToReference>
            <operator>Assign</operator>
            <value>
                <booleanValue>true</booleanValue>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>$Record.EntitlementId</assignToReference>
            <operator>Assign</operator>
            <value>
                <stringValue>5503r000000k9vhAAA</stringValue>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>$Record.Entitlement_Name__c</assignToReference>
            <operator>Assign</operator>
            <value>
                <stringValue>Approved Free Service Entitlement</stringValue>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>Did_the_Status_Change</targetReference>
        </connector>
    </assignments>
    <assignments>
        <name>Set_Status_Date_Time_Open</name>
        <label>Set Status Date/Time Open</label>
        <locationX>2828</locationX>
        <locationY>940</locationY>
        <assignmentItems>
            <assignToReference>$Record.Date_Time_Status_Open__c</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>$Flow.CurrentDateTime</elementReference>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>What_Status_Detail</targetReference>
        </connector>
    </assignments>
    <assignments>
        <name>Set_Status_Date_Time_Resolve</name>
        <label>Set Status Date/Time Resolve</label>
        <locationX>2778</locationX>
        <locationY>1082</locationY>
        <assignmentItems>
            <assignToReference>$Record.Resolved_Date_Time__c</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>$Flow.CurrentDateTime</elementReference>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>$Record.Resolution_Communicated_to_Customer__c</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>$Flow.CurrentDateTime</elementReference>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>$Record.Resolution_Status_Count__c</assignToReference>
            <operator>Add</operator>
            <value>
                <numberValue>1.0</numberValue>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>Is_Restore_Date_Time_Missing</targetReference>
        </connector>
    </assignments>
    <assignments>
        <name>Stamp_Date_Time</name>
        <label>Stamp Date/Time</label>
        <locationX>3239</locationX>
        <locationY>1093</locationY>
        <assignmentItems>
            <assignToReference>$Record.Pending_Internal_Response_Date_Time__c</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>$Flow.CurrentDateTime</elementReference>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>Remove_Stopped_Flag</targetReference>
        </connector>
    </assignments>
    <assignments>
        <name>Stamp_Date_Time_0</name>
        <label>Stamp Date/Time</label>
        <locationX>3175</locationX>
        <locationY>1263</locationY>
        <assignmentItems>
            <assignToReference>$Record.Pending_Development_Date_Time__c</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>$Flow.CurrentDateTime</elementReference>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>Remove_Stopped_Flag</targetReference>
        </connector>
    </assignments>
    <assignments>
        <name>Stamp_Date_Time_0_0</name>
        <label>Stamp Date/Time</label>
        <locationX>3258</locationX>
        <locationY>1314</locationY>
        <assignmentItems>
            <assignToReference>$Record.Pending_Parts_Order_Date_Time__c</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>$Flow.CurrentDateTime</elementReference>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>Remove_Stopped_Flag</targetReference>
        </connector>
    </assignments>
    <assignments>
        <name>Stamp_Date_Time_0_0_0</name>
        <label>Stamp Date/Time</label>
        <locationX>3205</locationX>
        <locationY>1680</locationY>
        <assignmentItems>
            <assignToReference>$Record.Pending_External_Response_Date_Time__c</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>$Flow.CurrentDateTime</elementReference>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>$Record.Pending_External_Response__c</assignToReference>
            <operator>Assign</operator>
            <value>
                <booleanValue>true</booleanValue>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>Add_Stopped_Flag</targetReference>
        </connector>
    </assignments>
    <assignments>
        <name>Stamp_Date_Time_0_0_0_0</name>
        <label>Stamp Date/Time</label>
        <locationX>3132</locationX>
        <locationY>1090</locationY>
        <assignmentItems>
            <assignToReference>$Record.Pending_Return_Date_Time__c</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>$Flow.CurrentDateTime</elementReference>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>Remove_Stopped_Flag</targetReference>
        </connector>
    </assignments>
    <assignments>
        <name>Stamp_Date_Time_0_0_0_0_0</name>
        <label>Stamp Date/Time</label>
        <locationX>3528</locationX>
        <locationY>1526</locationY>
        <assignmentItems>
            <assignToReference>$Record.Closed_Pending_Orders_Date_Time__c</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>$Flow.CurrentDateTime</elementReference>
            </value>
        </assignmentItems>
    </assignments>
    <assignments>
        <name>Stamp_Date_Time_0_0_0_0_0_0</name>
        <label>Stamp Date/Time</label>
        <locationX>3290</locationX>
        <locationY>1614</locationY>
        <assignmentItems>
            <assignToReference>$Record.Awaiting_Customer_Acceptance_Date_Time__c</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>$Flow.CurrentDateTime</elementReference>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>Add_Stopped_Flag</targetReference>
        </connector>
    </assignments>
    <assignments>
        <name>Stamp_Date_Time_0_0_0_0_0_0_0</name>
        <label>Stamp Date/Time</label>
        <locationX>3485</locationX>
        <locationY>1418</locationY>
        <assignmentItems>
            <assignToReference>$Record.In_Progress_Date_Time__c</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>$Flow.CurrentDateTime</elementReference>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>Remove_Stopped_Flag</targetReference>
        </connector>
    </assignments>
    <assignments>
        <name>Stamp_Date_Time_0_0_0_0_0_0_0_0</name>
        <label>Stamp Date/Time</label>
        <locationX>3070</locationX>
        <locationY>1671</locationY>
        <assignmentItems>
            <assignToReference>$Record.Pending_External_Response_Date_Time__c</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>$Flow.CurrentDateTime</elementReference>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>$Record.Pending_External_Response__c</assignToReference>
            <operator>Assign</operator>
            <value>
                <booleanValue>true</booleanValue>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>Add_Stopped_Flag</targetReference>
        </connector>
    </assignments>
    <assignments>
        <name>Stamp_Debug</name>
        <label>Stamp Debug</label>
        <locationX>1050</locationX>
        <locationY>268</locationY>
        <assignmentItems>
            <assignToReference>$Record.Debug__c</assignToReference>
            <operator>Assign</operator>
            <value>
                <stringValue>Not New</stringValue>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>Prior_Record</targetReference>
        </connector>
    </assignments>
    <assignments>
        <name>Stamp_Debug_0_0_0</name>
        <label>Stamp Debug</label>
        <locationX>1271</locationX>
        <locationY>492</locationY>
        <assignmentItems>
            <assignToReference>$Record.Debug__c</assignToReference>
            <operator>Assign</operator>
            <value>
                <stringValue>No Prior Record </stringValue>
            </value>
        </assignmentItems>
    </assignments>
    <assignments>
        <name>stamp_debug_end_of_status_no_changes</name>
        <label>stamp debug end of status - no changes</label>
        <locationX>3666</locationX>
        <locationY>1944</locationY>
        <assignmentItems>
            <assignToReference>$Record.Debug__c</assignToReference>
            <operator>Assign</operator>
            <value>
                <stringValue>End of Status - No Change</stringValue>
            </value>
        </assignmentItems>
    </assignments>
    <assignments>
        <name>Update_Environment_Field</name>
        <label>Update Environment Field</label>
        <locationX>658</locationX>
        <locationY>1140</locationY>
        <assignmentItems>
            <assignToReference>$Record.Environment__c</assignToReference>
            <operator>Assign</operator>
            <value>
                <stringValue>UAT</stringValue>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>Custom_Entitlement</targetReference>
        </connector>
    </assignments>
    <decisions>
        <name>Account_have_Business_Hours</name>
        <label>Account have Business Hours?</label>
        <locationX>1497</locationX>
        <locationY>1602</locationY>
        <defaultConnectorLabel>Default Outcome</defaultConnectorLabel>
        <rules>
            <name>Yes_on_Account</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>$Record.Account.Default_Business_Hours__c</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>false</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Did_the_Status_Change</targetReference>
            </connector>
            <label>Yes on Account</label>
        </rules>
        <rules>
            <name>No_on_Account</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>$Record.Account.Default_Business_Hours__c</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Did_the_Status_Change</targetReference>
            </connector>
            <label>No on Account</label>
        </rules>
    </decisions>
    <decisions>
        <name>Better_than_it_was</name>
        <label>Better than it was?</label>
        <locationX>50</locationX>
        <locationY>1721</locationY>
        <defaultConnector>
            <targetReference>Capture_Care_Level</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>Default Outcome</defaultConnectorLabel>
        <rules>
            <name>No_previous_value</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>varCareLevel</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Is_it_Care_U</targetReference>
            </connector>
            <label>No previous value</label>
        </rules>
        <rules>
            <name>Previous_is_already_Care</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>varCareLevel</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>Care+</stringValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Loop_Contract_Lines</targetReference>
            </connector>
            <label>Previous is already Care+ Move On</label>
        </rules>
        <rules>
            <name>Care_is_always_best</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>returnTranslatedServiceLevel</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>Care+</stringValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Capture_Care_Level</targetReference>
            </connector>
            <label>Care+ is always best</label>
        </rules>
        <rules>
            <name>Care_U_is_best_too</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>returnTranslatedServiceLevel</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>Care+U</stringValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Capture_Care_U_Specific</targetReference>
            </connector>
            <label>Care+U is best too</label>
        </rules>
        <rules>
            <name>Care_is_better_than_standard</name>
            <conditionLogic>1 AND (2 OR 3)</conditionLogic>
            <conditions>
                <leftValueReference>returnTranslatedServiceLevel</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>Care</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>varCareLevel</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>Standard</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>varCareLevel</leftValueReference>
                <operator>NotEqualTo</operator>
                <rightValue>
                    <stringValue>Care+</stringValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Capture_Care_Level</targetReference>
            </connector>
            <label>Care is better than standard</label>
        </rules>
        <rules>
            <name>Standard_we_can_do_better</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>returnTranslatedServiceLevel</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>Standard</stringValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Loop_Contract_Lines</targetReference>
            </connector>
            <label>Standard we can do better</label>
        </rules>
    </decisions>
    <decisions>
        <name>Business_Hours_Check</name>
        <label>Business Hours Check</label>
        <locationX>1505</locationX>
        <locationY>1809</locationY>
        <defaultConnectorLabel>Default Outcome</defaultConnectorLabel>
        <rules>
            <name>Business_Hours_Yes</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>$Record.BusinessHoursId</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>false</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Did_the_Status_Change</targetReference>
            </connector>
            <label>Business Hours Yes</label>
        </rules>
        <rules>
            <name>Business_Hours_No</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>$Record.BusinessHoursId</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Account_have_Business_Hours</targetReference>
            </connector>
            <label>Business Hours No</label>
        </rules>
    </decisions>
    <decisions>
        <name>Check_ISNEW</name>
        <label>Check ISNEW</label>
        <locationX>804</locationX>
        <locationY>273</locationY>
        <defaultConnector>
            <targetReference>Stamp_Debug</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>Default Outcome</defaultConnectorLabel>
        <rules>
            <name>ISNEW</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>$Record.Id</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Debug</targetReference>
            </connector>
            <label>ISNEW</label>
        </rules>
    </decisions>
    <decisions>
        <name>Did_the_Status_Change</name>
        <label>Did the Status Change?</label>
        <locationX>2603</locationX>
        <locationY>1457</locationY>
        <defaultConnectorLabel>Default Outcome</defaultConnectorLabel>
        <rules>
            <name>Yes_Status_Change</name>
            <conditionLogic>or</conditionLogic>
            <conditions>
                <leftValueReference>isChanged_Status</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>isChanged_StatusDetail</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Assign_Old_Value</targetReference>
            </connector>
            <label>Yes Status Change</label>
        </rules>
        <rules>
            <name>No_Status_Change</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>isChanged_Status</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <booleanValue>false</booleanValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>isChanged_StatusDetail</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <booleanValue>false</booleanValue>
                </rightValue>
            </conditions>
            <label>No Status Change</label>
        </rules>
    </decisions>
    <decisions>
        <name>Did_we_get_a_Prior_Record</name>
        <label>Did we get a Prior Record?</label>
        <locationX>1046</locationX>
        <locationY>498</locationY>
        <defaultConnectorLabel>Default Outcome</defaultConnectorLabel>
        <rules>
            <name>Yes_Prior_Record</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>Prior_Record</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>false</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Freebie_or_Billable_Set</targetReference>
            </connector>
            <label>Yes Prior Record</label>
        </rules>
        <rules>
            <name>No_Prior_Record</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>Prior_Record</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Stamp_Debug_0_0_0</targetReference>
            </connector>
            <label>No Prior Record</label>
        </rules>
    </decisions>
    <decisions>
        <name>Do_we_have_a_Parent</name>
        <label>Do we have a Parent?</label>
        <locationX>886</locationX>
        <locationY>1418</locationY>
        <defaultConnector>
            <targetReference>Did_the_Status_Change</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>Default Outcome</defaultConnectorLabel>
        <rules>
            <name>Yes_Parent</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>Parent_Asset</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>false</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Assign_Parent_Contract_and_Business_Hours</targetReference>
            </connector>
            <label>Yes Parent</label>
        </rules>
    </decisions>
    <decisions>
        <description>&lt;beware of NULL cases..   how to check!&gt;</description>
        <name>Do_we_have_an_Asset</name>
        <label>Do we have an Asset?</label>
        <locationX>1056</locationX>
        <locationY>894</locationY>
        <defaultConnectorLabel>Default Outcome</defaultConnectorLabel>
        <rules>
            <name>No_Asset</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>$Record.AssetId</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Clear_asset_related_values</targetReference>
            </connector>
            <label>No Asset</label>
        </rules>
        <rules>
            <name>Changed_Asset</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>isChanged_Asset</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Asset_Record</targetReference>
            </connector>
            <label>Changed Asset</label>
        </rules>
        <rules>
            <name>Same_Asset</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>Prior_Record.AssetId</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <elementReference>$Record.AssetId</elementReference>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Did_the_Status_Change</targetReference>
            </connector>
            <label>Same Asset</label>
        </rules>
        <rules>
            <name>New_Record_Asset</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>$Record.AssetId</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>false</booleanValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record__Prior</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Asset_Record</targetReference>
            </connector>
            <label>New Record + Asset</label>
        </rules>
    </decisions>
    <decisions>
        <description>if so we&apos;re going to bypass all the asset/entitlement logic and just assign the entitlement we want.</description>
        <name>Freebie_or_Billable_Set</name>
        <label>Freebie or Billable Set?</label>
        <locationX>1043</locationX>
        <locationY>666</locationY>
        <defaultConnector>
            <targetReference>Do_we_have_an_Asset</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>Default Outcome</defaultConnectorLabel>
        <rules>
            <name>Billable_0</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>$Record.Billable__c</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Set_Billable_Entitlement</targetReference>
            </connector>
            <label>Billable</label>
        </rules>
        <rules>
            <name>Freebie_0</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>$Record.Freebie__c</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Set_Freebie_Entitlement</targetReference>
            </connector>
            <label>Freebie</label>
        </rules>
        <rules>
            <name>Flags_Removed</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>$Record.Billable__c</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <booleanValue>false</booleanValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.Freebie__c</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <booleanValue>false</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Clear_Entitlement</targetReference>
            </connector>
            <label>Flags Removed</label>
        </rules>
    </decisions>
    <decisions>
        <name>Get_a_Contract_Line</name>
        <label>Get a Contract Line?</label>
        <locationX>514</locationX>
        <locationY>1409</locationY>
        <defaultConnector>
            <targetReference>Parent_Asset</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>Default Outcome</defaultConnectorLabel>
        <rules>
            <name>Yes_we_have_Lines</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>Active_Service_Contract_Lines</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>false</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Debug_Contract</targetReference>
            </connector>
            <label>Yes we have Lines</label>
        </rules>
    </decisions>
    <decisions>
        <name>Get_Entitlement</name>
        <label>Get Entitlement?</label>
        <locationX>786</locationX>
        <locationY>1261</locationY>
        <defaultConnectorLabel>Default Outcome</defaultConnectorLabel>
        <rules>
            <name>Yes</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>Custom_Entitlement</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>false</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Assign_Contract_based_on_Custom_Entitlement</targetReference>
            </connector>
            <label>Yes</label>
        </rules>
        <rules>
            <name>No</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>Custom_Entitlement</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Active_Service_Contract_Lines</targetReference>
            </connector>
            <label>No</label>
        </rules>
    </decisions>
    <decisions>
        <name>Is_it_Care_U</name>
        <label>Is it Care+U?</label>
        <locationX>52</locationX>
        <locationY>1887</locationY>
        <defaultConnector>
            <targetReference>Capture_Care_Level</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>Default Outcome</defaultConnectorLabel>
        <rules>
            <name>yes_Care_U</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>returnTranslatedServiceLevel</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>Care+U</stringValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Capture_Care_U_Specific</targetReference>
            </connector>
            <label>yes Care+U</label>
        </rules>
    </decisions>
    <decisions>
        <name>Is_Open_Date_Time_missing</name>
        <label>Is Open Date/Time missing?</label>
        <locationX>3015</locationX>
        <locationY>956</locationY>
        <defaultConnector>
            <targetReference>What_Status_Detail</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>Default Outcome</defaultConnectorLabel>
        <rules>
            <name>Open_Date_Time_Null</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>$Record.Date_Time_Status_Open__c</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Set_Status_Date_Time_Open</targetReference>
            </connector>
            <label>Open Date/Time Null</label>
        </rules>
    </decisions>
    <decisions>
        <name>Is_Resolution_Date_Time_Missing</name>
        <label>Is Resolution Date/Time Missing?</label>
        <locationX>2695</locationX>
        <locationY>1299</locationY>
        <defaultConnector>
            <targetReference>Is_Restore_Date_Time_Missing</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>Default Outcome</defaultConnectorLabel>
        <rules>
            <name>Resolution_Is_Null</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>$Record.Resolved_Date_Time__c</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Set_Status_Date_Time_Resolve</targetReference>
            </connector>
            <label>Resolution Is Null</label>
        </rules>
    </decisions>
    <decisions>
        <name>Is_Restore_Date_Time_Missing</name>
        <label>Is Restore Date/Time Missing?</label>
        <locationX>2869</locationX>
        <locationY>1262</locationY>
        <defaultConnector>
            <targetReference>Is_Open_Date_Time_missing</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>Default Outcome</defaultConnectorLabel>
        <rules>
            <name>Restore_Is_Null</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>$Record.Restore_Date_Time__c</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <label>Restore Is Null</label>
        </rules>
    </decisions>
    <decisions>
        <name>UAT_Asset</name>
        <label>UAT Asset?</label>
        <locationX>782</locationX>
        <locationY>1064</locationY>
        <defaultConnector>
            <targetReference>Custom_Entitlement</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>Default Outcome</defaultConnectorLabel>
        <rules>
            <name>Yes_UAT</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>Asset_Record.SerialNumber</leftValueReference>
                <operator>Contains</operator>
                <rightValue>
                    <stringValue>UAT</stringValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Update_Environment_Field</targetReference>
            </connector>
            <label>Yes UAT</label>
        </rules>
    </decisions>
    <decisions>
        <name>What_Entitlement_Level</name>
        <label>What Entitlement Level?</label>
        <locationX>1016</locationX>
        <locationY>1733</locationY>
        <defaultConnectorLabel>Default Outcome</defaultConnectorLabel>
        <rules>
            <name>CarePlus</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>varCareLevel</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>Care+</stringValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>CarePlus_Entitlement</targetReference>
            </connector>
            <label>Care+</label>
        </rules>
        <rules>
            <name>Care</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>varCareLevel</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>Care</stringValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>CareEntitlement</targetReference>
            </connector>
            <label>Care</label>
        </rules>
        <rules>
            <name>Standard</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>varCareLevel</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>Standard</stringValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Standard_Entitlement</targetReference>
            </connector>
            <label>Standard</label>
        </rules>
    </decisions>
    <decisions>
        <name>What_Status</name>
        <label>What Status?</label>
        <locationX>2560</locationX>
        <locationY>1080</locationY>
        <defaultConnector>
            <targetReference>No_Status_Just_Detail</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>Default Outcome</defaultConnectorLabel>
        <rules>
            <name>Open</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>$Record.Status</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>Open</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.Date_Time_Status_Open__c</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Set_Status_Date_Time_Open</targetReference>
            </connector>
            <label>Open</label>
        </rules>
        <rules>
            <name>Restore</name>
            <conditionLogic>1 AND (2 OR 3)</conditionLogic>
            <conditions>
                <leftValueReference>$Record.Status</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>Restore</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.Restore_Date_Time__c</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.Restore_Communicated_to_Customer__c</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <label>Restore</label>
        </rules>
        <rules>
            <name>Resolved</name>
            <conditionLogic>1 AND (2 OR 3)</conditionLogic>
            <conditions>
                <leftValueReference>$Record.Status</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>Resolved</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.Resolved_Date_Time__c</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.Resolution_Communicated_to_Customer__c</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Set_Status_Date_Time_Resolve</targetReference>
            </connector>
            <label>Resolved</label>
        </rules>
        <rules>
            <name>Closed_Cancelled</name>
            <conditionLogic>or</conditionLogic>
            <conditions>
                <leftValueReference>$Record.Status</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>Closed</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.Status</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>Cancelled</stringValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Is_Resolution_Date_Time_Missing</targetReference>
            </connector>
            <label>Closed/Cancelled</label>
        </rules>
    </decisions>
    <decisions>
        <name>What_Status_Detail</name>
        <label>What Status Detail?</label>
        <locationX>2950</locationX>
        <locationY>1439</locationY>
        <defaultConnector>
            <targetReference>stamp_debug_end_of_status_no_changes</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>Default Outcome</defaultConnectorLabel>
        <rules>
            <name>Pending_Internal_Response</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>$Record.Status_Detail__c</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>Pending Internal Response</stringValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Stamp_Date_Time</targetReference>
            </connector>
            <label>Pending Internal Response</label>
        </rules>
        <rules>
            <name>Pending_Development</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>$Record.Status_Detail__c</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>Pending Development</stringValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Stamp_Date_Time_0</targetReference>
            </connector>
            <label>Pending Development</label>
        </rules>
        <rules>
            <name>Pending_Parts_Order</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>$Record.Status_Detail__c</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>Pending Parts Order</stringValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Stamp_Date_Time_0_0</targetReference>
            </connector>
            <label>Pending Parts Order</label>
        </rules>
        <rules>
            <name>Pending_External_Response</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>$Record.Status_Detail__c</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>Pending External Response</stringValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Stamp_Date_Time_0_0_0</targetReference>
            </connector>
            <label>Pending External Response</label>
        </rules>
        <rules>
            <name>Pending_Return</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>$Record.Status_Detail__c</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>Pending Return</stringValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Stamp_Date_Time_0_0_0_0</targetReference>
            </connector>
            <label>Pending Return</label>
        </rules>
        <rules>
            <name>Closed_Pending_Orders</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>$Record.Status_Detail__c</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>Closed Pending Orders</stringValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Stamp_Date_Time_0_0_0_0_0</targetReference>
            </connector>
            <label>Closed Pending Orders</label>
        </rules>
        <rules>
            <name>Awaiting_Customer_Acceptance</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>$Record.Status_Detail__c</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>Awaiting Customer Acceptance</stringValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Stamp_Date_Time_0_0_0_0_0_0</targetReference>
            </connector>
            <label>Awaiting Customer Acceptance</label>
        </rules>
        <rules>
            <name>In_Progress</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>$Record.Status_Detail__c</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>In Progress</stringValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>InProgress_Path</targetReference>
            </connector>
            <label>In Progress</label>
        </rules>
        <rules>
            <name>On_Hold</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>$Record.Status_Detail__c</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>On Hold</stringValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Stamp_Date_Time_0_0_0_0_0_0_0_0</targetReference>
            </connector>
            <label>On Hold</label>
        </rules>
    </decisions>
    <description>Added logic for billable/freebie flags.   Reorganized</description>
    <formulas>
        <name>isChanged_Account</name>
        <dataType>Boolean</dataType>
        <expression>IF ( {!Prior_Record.AccountId}  !=  {!$Record.AccountId} ,
TRUE, FALSE  )</expression>
    </formulas>
    <formulas>
        <name>isChanged_Asset</name>
        <dataType>Boolean</dataType>
        <expression>IF ( {!Prior_Record.AssetId}  !=  {!$Record.AssetId} ,
TRUE, FALSE  )</expression>
    </formulas>
    <formulas>
        <name>isChanged_Status</name>
        <dataType>Boolean</dataType>
        <expression>IF (   TEXT( {!Prior_Record.Status} ) != TEXT( {!$Record.Status} ),
TRUE,FALSE  )</expression>
    </formulas>
    <formulas>
        <name>isChanged_StatusDetail</name>
        <dataType>Boolean</dataType>
        <expression>IF (   TEXT( {!Prior_Record.Status_Detail__c} ) != TEXT( {!$Record.Status_Detail__c} ),
TRUE,FALSE  )</expression>
    </formulas>
    <formulas>
        <name>returnResolutionTargetDate</name>
        <dataType>DateTime</dataType>
        <expression>IF ( AND ( ISPICKVAL( {!$Record.Priority}, &quot;1-Critical&quot;), {!Standard_Entitlement.Name} = &quot;Care+ Service Entitlement&quot;), {!$Record.CreatedDate} + (15/1440), 
IF ( AND ( ISPICKVAL( {!$Record.Priority}, &quot;2-High&quot;), {!Standard_Entitlement.Name} = &quot;Care+ Service Entitlement&quot;), {!$Record.CreatedDate} + (240/1440), 
IF ( AND ( ISPICKVAL( {!$Record.Priority}, &quot;3-Medium&quot;), {!Standard_Entitlement.Name} = &quot;Care+ Service Entitlement&quot;), {!$Record.CreatedDate} + (600/1440), 
IF ( AND ( ISPICKVAL( {!$Record.Priority}, &quot;4-Low&quot;), {!Standard_Entitlement.Name} = &quot;Care+ Service Entitlement&quot;), {!$Record.CreatedDate} + (1200/1440), 

IF ( AND ( ISPICKVAL( {!$Record.Priority}, &quot;1-Critical&quot;), {!Standard_Entitlement.Name} = &quot;Care Service Entitlement&quot;), {!$Record.CreatedDate} + (30/1440), 
IF ( AND ( ISPICKVAL( {!$Record.Priority}, &quot;2-High&quot;), {!Standard_Entitlement.Name} = &quot;Care Service Entitlement&quot;), {!$Record.CreatedDate} + (360/1440), 
IF ( AND ( ISPICKVAL( {!$Record.Priority}, &quot;3-Medium&quot;), {!Standard_Entitlement.Name} = &quot;Care Service Entitlement&quot;), {!$Record.CreatedDate} + (1200/1440), 
IF ( AND ( ISPICKVAL( {!$Record.Priority}, &quot;4-Low&quot;), {!Standard_Entitlement.Name} = &quot;Care Service Entitlement&quot;), {!$Record.CreatedDate} + (3000/1440), 

IF ( AND ( ISPICKVAL( {!$Record.Priority}, &quot;1-Critical&quot;), {!Standard_Entitlement.Name} = &quot;Standard Service Entitlement&quot;), {!$Record.CreatedDate} + (60/1440), 
IF ( AND ( ISPICKVAL( {!$Record.Priority}, &quot;2-High&quot;), {!Standard_Entitlement.Name} = &quot;Standard Service Entitlement&quot;), {!$Record.CreatedDate} + (480/1440), 
IF ( AND ( ISPICKVAL( {!$Record.Priority}, &quot;3-Medium&quot;), {!Standard_Entitlement.Name} = &quot;Standard Service Entitlement&quot;), {!$Record.CreatedDate} + (1800/1440), 
IF ( AND ( ISPICKVAL( {!$Record.Priority}, &quot;4-Low&quot;), {!Standard_Entitlement.Name} = &quot;Standard Service Entitlement&quot;), {!$Record.CreatedDate} + (6000/1440), 

NOW()
)))) )))) ))))</expression>
    </formulas>
    <formulas>
        <description>becasue there are STUPID DIFFERENT NAMES for service level, this does some translating inside the contract lines loop so everything matches up to what they&apos;re supposed to be.</description>
        <name>returnTranslatedServiceLevel</name>
        <dataType>String</dataType>
        <expression>IF ({!Loop_Contract_Lines.Service_Level__c}=&quot;STANDARD WARRANTY&quot;, &quot;Standard&quot;,
IF({!Loop_Contract_Lines.Service_Level__c}=&quot;EXTENDED CARE+&quot;, &quot;Care+&quot;,
IF({!Loop_Contract_Lines.Service_Level__c}=&quot;CARE+U&quot;, &quot;Care+&quot;,
IF({!Loop_Contract_Lines.Service_Level__c}=&quot;EXTENDED CARE&quot;, &quot;Care&quot;,
{!Loop_Contract_Lines.Service_Level__c}
))))</expression>
    </formulas>
    <interviewLabel>Case - Before Save Automation {!$Flow.CurrentDateTime}</interviewLabel>
    <label>Case - Before Save Automation</label>
    <loops>
        <name>Loop_Contract_Lines</name>
        <label>Loop Contract Lines</label>
        <locationX>349</locationX>
        <locationY>1564</locationY>
        <collectionReference>Active_Service_Contract_Lines</collectionReference>
        <iterationOrder>Asc</iterationOrder>
        <nextValueConnector>
            <targetReference>Better_than_it_was</targetReference>
        </nextValueConnector>
        <noMoreValuesConnector>
            <targetReference>Assign_Contract_and_Business_Hours</targetReference>
        </noMoreValuesConnector>
    </loops>
    <processMetadataValues>
        <name>BuilderType</name>
        <value>
            <stringValue>LightningFlowBuilder</stringValue>
        </value>
    </processMetadataValues>
    <processMetadataValues>
        <name>CanvasMode</name>
        <value>
            <stringValue>FREE_FORM_CANVAS</stringValue>
        </value>
    </processMetadataValues>
    <processMetadataValues>
        <name>OriginBuilderType</name>
        <value>
            <stringValue>LightningFlowBuilder</stringValue>
        </value>
    </processMetadataValues>
    <processType>AutoLaunchedFlow</processType>
    <recordLookups>
        <name>Active_Service_Contract_Lines</name>
        <label>Active Service Contract Lines</label>
        <locationX>527</locationX>
        <locationY>1273</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>Get_a_Contract_Line</targetReference>
        </connector>
        <filters>
            <field>AssetId</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>$Record.AssetId</elementReference>
            </value>
        </filters>
        <filters>
            <field>Status</field>
            <operator>EqualTo</operator>
            <value>
                <stringValue>Active</stringValue>
            </value>
        </filters>
        <object>ContractLineItem</object>
    </recordLookups>
    <recordLookups>
        <name>Asset_Record</name>
        <label>Asset Record</label>
        <locationX>785</locationX>
        <locationY>897</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>UAT_Asset</targetReference>
        </connector>
        <filters>
            <field>Id</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>$Record.AssetId</elementReference>
            </value>
        </filters>
        <object>Asset</object>
    </recordLookups>
    <recordLookups>
        <name>CareEntitlement</name>
        <label>Care Entitlement</label>
        <locationX>1268</locationX>
        <locationY>1806</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>Assign_Care_Values</targetReference>
        </connector>
        <filters>
            <field>Name</field>
            <operator>EqualTo</operator>
            <value>
                <stringValue>Care Service Entitlement</stringValue>
            </value>
        </filters>
        <object>Entitlement</object>
    </recordLookups>
    <recordLookups>
        <name>CarePlus_Entitlement</name>
        <label>Care+ Entitlement</label>
        <locationX>1203</locationX>
        <locationY>1666</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>Assign_CarePlus_Values</targetReference>
        </connector>
        <filters>
            <field>Name</field>
            <operator>EqualTo</operator>
            <value>
                <stringValue>Care+ Service Entitlement</stringValue>
            </value>
        </filters>
        <object>Entitlement</object>
    </recordLookups>
    <recordLookups>
        <name>Custom_Entitlement</name>
        <label>Custom Entitlement?</label>
        <locationX>523</locationX>
        <locationY>1063</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>Get_Entitlement</targetReference>
        </connector>
        <filters>
            <field>AssetId</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>$Record.AssetId</elementReference>
            </value>
        </filters>
        <filters>
            <field>AssetId</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>Asset_Record.ParentId</elementReference>
            </value>
        </filters>
        <filters>
            <field>EndDate</field>
            <operator>IsNull</operator>
            <value>
                <booleanValue>false</booleanValue>
            </value>
        </filters>
        <object>Entitlement</object>
    </recordLookups>
    <recordLookups>
        <description>still looking for a contract.  since we haven&apos;t found one yet we&apos;re going to check and see if there is a parent asset and if IT has a contract.  Because I&apos;m feeling special, going to grab from the new contract line ID field I just created.</description>
        <name>Parent_Asset</name>
        <label>Parent Asset</label>
        <locationX>724</locationX>
        <locationY>1416</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>Do_we_have_a_Parent</targetReference>
        </connector>
        <filters>
            <field>Id</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>$Record.Asset.ParentId</elementReference>
            </value>
        </filters>
        <object>Asset</object>
    </recordLookups>
    <recordLookups>
        <name>Prior_Record</name>
        <label>Prior Record</label>
        <locationX>1051</locationX>
        <locationY>385</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>Did_we_get_a_Prior_Record</targetReference>
        </connector>
        <filters>
            <field>Id</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>$Record.Id</elementReference>
            </value>
        </filters>
        <object>Case</object>
    </recordLookups>
    <recordLookups>
        <name>Standard_Entitlement</name>
        <label>Standard Entitlement</label>
        <locationX>1162</locationX>
        <locationY>1951</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>Assign_Standard_Values</targetReference>
        </connector>
        <filters>
            <field>Name</field>
            <operator>EqualTo</operator>
            <value>
                <stringValue>Standard Service Entitlement</stringValue>
            </value>
        </filters>
        <object>Entitlement</object>
    </recordLookups>
    <startElementReference>Check_ISNEW</startElementReference>
    <status>Active</status>
    <variables>
        <name>varCareLevel</name>
        <dataType>String</dataType>
        <isCollection>false</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
    </variables>
    <variables>
        <name>varThisIsOurContractLine</name>
        <dataType>SObject</dataType>
        <isCollection>false</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
        <objectType>ContractLineItem</objectType>
    </variables>
</Flow>

<?xml version="1.0" encoding="UTF-8"?>
<Flow xmlns="http://soap.sforce.com/2006/04/metadata">
    <actionCalls>
        <name>Email_Bailout</name>
        <label>Email Bailout</label>
        <locationX>296</locationX>
        <locationY>1011</locationY>
        <actionName>emailSimple</actionName>
        <actionType>emailSimple</actionType>
        <inputParameters>
            <name>emailBody</name>
            <value>
                <stringValue>Generally caused by 2 orders with different types  -  https://imaginecommunications.my.salesforce.com/{!CaseRecord.Id}</stringValue>
            </value>
        </inputParameters>
        <inputParameters>
            <name>emailAddresses</name>
            <value>
                <stringValue>darcie.laur@imaginecommunications.com</stringValue>
            </value>
        </inputParameters>
        <inputParameters>
            <name>emailSubject</name>
            <value>
                <stringValue>Case too convoluted for automation</stringValue>
            </value>
        </inputParameters>
    </actionCalls>
    <actionCalls>
        <name>Send_summary_email</name>
        <label>Send summary email</label>
        <locationX>1571</locationX>
        <locationY>133</locationY>
        <actionName>emailSimple</actionName>
        <actionType>emailSimple</actionType>
        <inputParameters>
            <name>emailBody</name>
            <value>
                <elementReference>SummaryText</elementReference>
            </value>
        </inputParameters>
        <inputParameters>
            <name>emailAddresses</name>
            <value>
                <stringValue>darcie.laur@imaginecommunications.com</stringValue>
            </value>
        </inputParameters>
        <inputParameters>
            <name>emailSubject</name>
            <value>
                <stringValue>Case Status has changed - Order Process</stringValue>
            </value>
        </inputParameters>
    </actionCalls>
    <assignments>
        <name>Set_Bailout</name>
        <label>Set Bailout</label>
        <locationX>467</locationX>
        <locationY>836</locationY>
        <assignmentItems>
            <assignToReference>Bailout</assignToReference>
            <operator>Assign</operator>
            <value>
                <booleanValue>true</booleanValue>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>Check_For_Lines</targetReference>
        </connector>
    </assignments>
    <assignments>
        <name>Set_Closed</name>
        <label>Set Closed</label>
        <locationX>1199</locationX>
        <locationY>196</locationY>
        <assignmentItems>
            <assignToReference>CaseRecord.Status</assignToReference>
            <operator>Assign</operator>
            <value>
                <stringValue>Closed</stringValue>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>Update_Case</targetReference>
        </connector>
    </assignments>
    <assignments>
        <name>Set_Closed_Pending_Orders</name>
        <label>Set Closed Pending Orders</label>
        <locationX>1200</locationX>
        <locationY>312</locationY>
        <assignmentItems>
            <assignToReference>CaseRecord.Status</assignToReference>
            <operator>Assign</operator>
            <value>
                <stringValue>Closed</stringValue>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>CaseRecord.Status_Detail__c</assignToReference>
            <operator>Assign</operator>
            <value>
                <stringValue>Closed Pending Orders</stringValue>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>Update_Case</targetReference>
        </connector>
    </assignments>
    <assignments>
        <name>Set_Old_Case_Status_Case_Calling</name>
        <label>Set Old Case Status - Case Calling</label>
        <locationX>648</locationX>
        <locationY>292</locationY>
        <assignmentItems>
            <assignToReference>OldCaseStatus</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>CaseRecord.Status</elementReference>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>Find_Orders</targetReference>
        </connector>
    </assignments>
    <assignments>
        <name>Set_Old_Case_Status_Order_Calling</name>
        <label>Set Old Case Status - Order Calling</label>
        <locationX>683</locationX>
        <locationY>54</locationY>
        <assignmentItems>
            <assignToReference>OldCaseStatus</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>CaseRecord.Status</elementReference>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>Order_Closed</targetReference>
        </connector>
    </assignments>
    <assignments>
        <name>Set_Open</name>
        <label>Set Open</label>
        <locationX>1194</locationX>
        <locationY>60</locationY>
        <assignmentItems>
            <assignToReference>CaseRecord.Status</assignToReference>
            <operator>Assign</operator>
            <value>
                <stringValue>Open</stringValue>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>CaseRecord.Status_Detail__c</assignToReference>
            <operator>Assign</operator>
            <value>
                <stringValue>In Progress</stringValue>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>Update_Case</targetReference>
        </connector>
    </assignments>
    <assignments>
        <name>Set_Order_Type</name>
        <label>Set Order Type</label>
        <locationX>701</locationX>
        <locationY>576</locationY>
        <assignmentItems>
            <assignToReference>OrderType</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>OrderInLoop.Type</elementReference>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>Open_Ship_Lines</targetReference>
        </connector>
    </assignments>
    <assignments>
        <name>Set_Pending_Return</name>
        <label>Set Pending Return</label>
        <locationX>1266</locationX>
        <locationY>456</locationY>
        <assignmentItems>
            <assignToReference>CaseRecord.Status</assignToReference>
            <operator>Assign</operator>
            <value>
                <stringValue>Closed</stringValue>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>CaseRecord.Status_Detail__c</assignToReference>
            <operator>Assign</operator>
            <value>
                <stringValue>Pending Return</stringValue>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>Update_Case</targetReference>
        </connector>
    </assignments>
    <assignments>
        <name>Set_Return_Lines_Status</name>
        <label>Set Return Lines Status</label>
        <locationX>1036</locationX>
        <locationY>867</locationY>
        <assignmentItems>
            <assignToReference>ReturnLines</assignToReference>
            <operator>Assign</operator>
            <value>
                <booleanValue>true</booleanValue>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>Check_For_Lines</targetReference>
        </connector>
    </assignments>
    <assignments>
        <name>Set_Ship_Lines_Status</name>
        <label>Set Ship Lines Status</label>
        <locationX>1034</locationX>
        <locationY>722</locationY>
        <assignmentItems>
            <assignToReference>ShipLines</assignToReference>
            <operator>Assign</operator>
            <value>
                <booleanValue>true</booleanValue>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>Open_Return_Lines</targetReference>
        </connector>
    </assignments>
    <decisions>
        <name>Case_or_Order_Calling</name>
        <label>Case or Order Calling?</label>
        <locationX>486</locationX>
        <locationY>171</locationY>
        <defaultConnectorLabel>Default Outcome</defaultConnectorLabel>
        <rules>
            <name>Order</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>OrderID</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>false</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Pause_for_Rollup_Field_Update</targetReference>
            </connector>
            <label>Order</label>
        </rules>
        <rules>
            <name>Case</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>CaseID</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>false</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Get_Case2</targetReference>
            </connector>
            <label>Case</label>
        </rules>
    </decisions>
    <decisions>
        <name>Check_Case_Status</name>
        <label>Check Case Status</label>
        <locationX>904</locationX>
        <locationY>66</locationY>
        <defaultConnectorLabel>Default Outcome</defaultConnectorLabel>
        <rules>
            <name>Closed_Pending_Orders</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>CaseRecord.Status_Detail__c</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>Closed Pending Orders</stringValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Set_Closed</targetReference>
            </connector>
            <label>Closed Pending Orders</label>
        </rules>
        <rules>
            <name>Pending_Parts_Order</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>CaseRecord.Status_Detail__c</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>Pending Parts Order</stringValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Set_Open</targetReference>
            </connector>
            <label>Pending Parts Order</label>
        </rules>
        <rules>
            <name>Pending_Return</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>CaseRecord.Status_Detail__c</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>Pending Return</stringValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Set_Closed</targetReference>
            </connector>
            <label>Pending Return</label>
        </rules>
    </decisions>
    <decisions>
        <name>Check_Case_Status_2</name>
        <label>Check Case Status 2</label>
        <locationX>764</locationX>
        <locationY>376</locationY>
        <defaultConnectorLabel>Default Outcome</defaultConnectorLabel>
        <rules>
            <name>Pending_Parts_Order_Normal</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>CaseRecord.Status_Detail__c</leftValueReference>
                <operator>EqualTo</operator>
            </conditions>
            <conditions>
                <leftValueReference>OrderRecord.Type</leftValueReference>
                <operator>NotEqualTo</operator>
                <rightValue>
                    <stringValue>Repair/Return</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>OrderRecord.Count_of_Open_Ship_Lines__c</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <numberValue>0.0</numberValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Set_Open</targetReference>
            </connector>
            <label>Pending Parts Order Normal</label>
        </rules>
        <rules>
            <name>Pending_Parts_Order_Repair</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>CaseRecord.Status_Detail__c</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>Pending Parts Order</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>OrderRecord.Type</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>Repair/Return</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>OrderRecord.Count_of_Open_Return_Lines__c</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <numberValue>0.0</numberValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>OrderRecord.Count_of_Open_Ship_Lines__c</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <numberValue>0.0</numberValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Set_Open</targetReference>
            </connector>
            <label>Pending Parts Order Repair</label>
        </rules>
        <rules>
            <name>All_Lines_Closed</name>
            <conditionLogic>(1 OR 2 OR 3) AND 4 AND 5</conditionLogic>
            <conditions>
                <leftValueReference>CaseRecord.Status_Detail__c</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>Closed Pending Orders</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>CaseRecord.Status</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>Closed</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>CaseRecord.Status_Detail__c</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>Pending Return</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>OrderRecord.Count_of_Open_Return_Lines__c</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <numberValue>0.0</numberValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>OrderRecord.Count_of_Open_Ship_Lines__c</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <numberValue>0.0</numberValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Set_Closed</targetReference>
            </connector>
            <label>All Lines Closed</label>
        </rules>
        <rules>
            <name>Closed_Ship_All_Lines_Open</name>
            <conditionLogic>(1 OR 2) AND 3 AND 4 AND 5</conditionLogic>
            <conditions>
                <leftValueReference>CaseRecord.Status</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>Closed</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>CaseRecord.Status_Detail__c</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>Pending Return</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>OrderRecord.Type</leftValueReference>
                <operator>NotEqualTo</operator>
                <rightValue>
                    <stringValue>Repair/Return</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>OrderRecord.Count_of_Open_Return_Lines__c</leftValueReference>
                <operator>GreaterThan</operator>
                <rightValue>
                    <numberValue>0.0</numberValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>OrderRecord.Count_of_Open_Ship_Lines__c</leftValueReference>
                <operator>GreaterThan</operator>
                <rightValue>
                    <numberValue>0.0</numberValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Set_Closed_Pending_Orders</targetReference>
            </connector>
            <label>Closed Ship All Lines Open</label>
        </rules>
        <rules>
            <name>Closed_Repair_All_Lines_Open</name>
            <conditionLogic>(1 OR 2) AND 3 AND 4 AND 5</conditionLogic>
            <conditions>
                <leftValueReference>CaseRecord.Status</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>Closed</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>CaseRecord.Status_Detail__c</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>Closed Pending Orders</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>OrderRecord.Type</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>Repair/Return</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>OrderRecord.Count_of_Open_Return_Lines__c</leftValueReference>
                <operator>GreaterThan</operator>
                <rightValue>
                    <numberValue>0.0</numberValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>OrderRecord.Count_of_Open_Ship_Lines__c</leftValueReference>
                <operator>GreaterThan</operator>
                <rightValue>
                    <numberValue>0.0</numberValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Set_Pending_Return</targetReference>
            </connector>
            <label>Closed Repair All Lines Open</label>
        </rules>
        <rules>
            <name>Closed_Ship_Return_Line_Open</name>
            <conditionLogic>(1 OR 2) AND 3 AND 4</conditionLogic>
            <conditions>
                <leftValueReference>CaseRecord.Status</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>Closed</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>CaseRecord.Status_Detail__c</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>Closed Pending Orders</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>OrderRecord.Type</leftValueReference>
                <operator>NotEqualTo</operator>
                <rightValue>
                    <stringValue>Repair/Return</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>OrderRecord.Count_of_Open_Return_Lines__c</leftValueReference>
                <operator>GreaterThan</operator>
                <rightValue>
                    <numberValue>0.0</numberValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Set_Pending_Return</targetReference>
            </connector>
            <label>Closed Ship Return Line Open</label>
        </rules>
        <rules>
            <name>Closed_Repair_Ship_Line_Open</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>CaseRecord.Status</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>Closed</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>CaseRecord.Status_Detail__c</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>Pending Return</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>OrderRecord.Type</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>Repair/Return</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>OrderRecord.Count_of_Open_Ship_Lines__c</leftValueReference>
                <operator>GreaterThan</operator>
                <rightValue>
                    <numberValue>0.0</numberValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Set_Closed_Pending_Orders</targetReference>
            </connector>
            <label>Closed Repair Ship Line Open</label>
        </rules>
    </decisions>
    <decisions>
        <name>Decide_Which_Status</name>
        <label>Decide Which Status</label>
        <locationX>1526</locationX>
        <locationY>766</locationY>
        <defaultConnectorLabel>Default Outcome</defaultConnectorLabel>
        <rules>
            <name>Case_Open_Lines_Closed</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>CaseRecord.Status_Detail__c</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>Pending Parts Order</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>ShipLines</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <booleanValue>false</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Set_Open</targetReference>
            </connector>
            <label>Case Open - Lines Closed</label>
        </rules>
        <rules>
            <name>All_Lines_Closed2</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>ShipLines</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <booleanValue>false</booleanValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>ReturnLines</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <booleanValue>false</booleanValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>CaseRecord.Status</leftValueReference>
                <operator>NotEqualTo</operator>
                <rightValue>
                    <stringValue>Closed</stringValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Set_Closed</targetReference>
            </connector>
            <label>All Lines Closed</label>
        </rules>
        <rules>
            <name>Type_Repair_Ship_Lines_Open</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>OrderType</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>Repair/Return</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>ShipLines</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>CaseRecord.Status_Detail__c</leftValueReference>
                <operator>NotEqualTo</operator>
                <rightValue>
                    <stringValue>Closed Pending Orders</stringValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Set_Closed_Pending_Orders</targetReference>
            </connector>
            <label>Type Repair - Ship Lines Open</label>
        </rules>
        <rules>
            <name>Type_Repair_Return_Lines_Open</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>OrderType</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>Repair/Return</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>ReturnLines</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>CaseRecord.Status_Detail__c</leftValueReference>
                <operator>NotEqualTo</operator>
                <rightValue>
                    <stringValue>Pending Return</stringValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Set_Pending_Return</targetReference>
            </connector>
            <label>Type Repair - Return Lines Open</label>
        </rules>
        <rules>
            <name>Type_Ship_Ship_Lines_Open</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>OrderType</leftValueReference>
                <operator>NotEqualTo</operator>
                <rightValue>
                    <stringValue>Repair/Return</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>ShipLines</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>CaseRecord.Status_Detail__c</leftValueReference>
                <operator>NotEqualTo</operator>
                <rightValue>
                    <stringValue>Closed Pending Orders</stringValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Set_Closed_Pending_Orders</targetReference>
            </connector>
            <label>Type Ship - Ship Lines Open</label>
        </rules>
        <rules>
            <name>Type_Ship_Return_Lines_Open</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>OrderType</leftValueReference>
                <operator>NotEqualTo</operator>
                <rightValue>
                    <stringValue>Repair/Return</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>ReturnLines</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>CaseRecord.Status_Detail__c</leftValueReference>
                <operator>NotEqualTo</operator>
                <rightValue>
                    <stringValue>Pending Return</stringValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Set_Pending_Return</targetReference>
            </connector>
            <label>Type Ship - Return Lines Open</label>
        </rules>
    </decisions>
    <decisions>
        <name>Did_order_type_change</name>
        <label>Did order type change?</label>
        <locationX>484</locationX>
        <locationY>704</locationY>
        <defaultConnector>
            <targetReference>Set_Order_Type</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>Default Outcome</defaultConnectorLabel>
        <rules>
            <name>Changed</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>OrderType</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>false</booleanValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>OrderType</leftValueReference>
                <operator>NotEqualTo</operator>
                <rightValue>
                    <elementReference>OrderInLoop.Type</elementReference>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Set_Bailout</targetReference>
            </connector>
            <label>Changed</label>
        </rules>
    </decisions>
    <decisions>
        <name>Is_Bailout_Set</name>
        <label>Is Bailout Set?</label>
        <locationX>290</locationX>
        <locationY>790</locationY>
        <defaultConnector>
            <targetReference>Decide_Which_Status</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>Default Outcome</defaultConnectorLabel>
        <rules>
            <name>Bail</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>Bailout</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Email_Bailout</targetReference>
            </connector>
            <label>Bail!</label>
        </rules>
    </decisions>
    <decisions>
        <name>Make_sure_we_got_orders</name>
        <label>Make sure we got orders</label>
        <locationX>596</locationX>
        <locationY>424</locationY>
        <defaultConnectorLabel>Default Outcome</defaultConnectorLabel>
        <rules>
            <name>Yes_Orders</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>OrderCollection</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>false</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Check_For_Lines</targetReference>
            </connector>
            <label>Yes Orders</label>
        </rules>
    </decisions>
    <decisions>
        <name>Open_Return_Lines</name>
        <label>Open Return Lines?</label>
        <locationX>799</locationX>
        <locationY>731</locationY>
        <defaultConnector>
            <targetReference>Check_For_Lines</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>Default Outcome</defaultConnectorLabel>
        <rules>
            <name>Yes_Return_Lines</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>OrderInLoop.Count_of_Open_Return_Lines__c</leftValueReference>
                <operator>GreaterThan</operator>
                <rightValue>
                    <numberValue>0.0</numberValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Set_Return_Lines_Status</targetReference>
            </connector>
            <label>Yes Return Lines</label>
        </rules>
    </decisions>
    <decisions>
        <name>Open_Ship_Lines</name>
        <label>Open Ship Lines?</label>
        <locationX>803</locationX>
        <locationY>576</locationY>
        <defaultConnector>
            <targetReference>Open_Return_Lines</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>Default Outcome</defaultConnectorLabel>
        <rules>
            <name>Yes_Ship_Lines</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>OrderInLoop.Count_of_Open_Ship_Lines__c</leftValueReference>
                <operator>GreaterThan</operator>
                <rightValue>
                    <numberValue>0.0</numberValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Set_Ship_Lines_Status</targetReference>
            </connector>
            <label>Yes Ship Lines</label>
        </rules>
    </decisions>
    <decisions>
        <name>Order_Closed</name>
        <label>Order Closed?</label>
        <locationX>793</locationX>
        <locationY>57</locationY>
        <defaultConnectorLabel>Default Outcome</defaultConnectorLabel>
        <rules>
            <name>Yes_Order_Closed</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>OrderRecord.Overall_Oracle_Order_Status__c</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>CLOSED, CANCELLED</stringValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Check_Case_Status</targetReference>
            </connector>
            <label>Yes Order Closed</label>
        </rules>
        <rules>
            <name>No_Order_Open</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>OrderRecord.Overall_Oracle_Order_Status__c</leftValueReference>
                <operator>NotEqualTo</operator>
                <rightValue>
                    <stringValue>CLOSED, CANCELLED</stringValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Check_Case_Status_2</targetReference>
            </connector>
            <label>No Order Open</label>
        </rules>
    </decisions>
    <interviewLabel>Order/Case Status Automation {!$Flow.CurrentDateTime}</interviewLabel>
    <label>Order/Case Status Automation</label>
    <loops>
        <name>Check_For_Lines</name>
        <label>Check_For_Lines</label>
        <locationX>309</locationX>
        <locationY>621</locationY>
        <assignNextValueToReference>OrderInLoop</assignNextValueToReference>
        <collectionReference>OrderCollection</collectionReference>
        <iterationOrder>Asc</iterationOrder>
        <nextValueConnector>
            <targetReference>Did_order_type_change</targetReference>
        </nextValueConnector>
        <noMoreValuesConnector>
            <targetReference>Is_Bailout_Set</targetReference>
        </noMoreValuesConnector>
    </loops>
    <processMetadataValues>
        <name>BuilderType</name>
        <value>
            <stringValue>LightningFlowBuilder</stringValue>
        </value>
    </processMetadataValues>
    <processMetadataValues>
        <name>CanvasMode</name>
        <value>
            <stringValue>FREE_FORM_CANVAS</stringValue>
        </value>
    </processMetadataValues>
    <processMetadataValues>
        <name>OriginBuilderType</name>
        <value>
            <stringValue>LightningFlowBuilder</stringValue>
        </value>
    </processMetadataValues>
    <processType>AutoLaunchedFlow</processType>
    <recordLookups>
        <name>Find_Orders</name>
        <label>Find Orders</label>
        <locationX>446</locationX>
        <locationY>402</locationY>
        <assignNullValuesIfNoRecordsFound>true</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>Make_sure_we_got_orders</targetReference>
        </connector>
        <filters>
            <field>Case__c</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>CaseRecord.Id</elementReference>
            </value>
        </filters>
        <filters>
            <field>Overall_Oracle_Order_Status__c</field>
            <operator>NotEqualTo</operator>
            <value>
                <stringValue>CANCELLED</stringValue>
            </value>
        </filters>
        <filters>
            <field>Order_Record_Type__c</field>
            <operator>EqualTo</operator>
            <value>
                <stringValue>Work Order</stringValue>
            </value>
        </filters>
        <filters>
            <field>Status</field>
            <operator>NotEqualTo</operator>
            <value>
                <stringValue>Cancelled</stringValue>
            </value>
        </filters>
        <filters>
            <field>Status</field>
            <operator>NotEqualTo</operator>
            <value>
                <stringValue>Failed to Interface</stringValue>
            </value>
        </filters>
        <object>Order</object>
        <outputReference>OrderCollection</outputReference>
        <queriedFields>Id</queriedFields>
        <queriedFields>Type</queriedFields>
        <queriedFields>Overall_Oracle_Order_Status__c</queriedFields>
        <queriedFields>Count_of_Open_Return_Lines__c</queriedFields>
        <queriedFields>Count_of_Open_Ship_Lines__c</queriedFields>
    </recordLookups>
    <recordLookups>
        <name>Get_Case</name>
        <label>Get Case</label>
        <locationX>586</locationX>
        <locationY>56</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>Set_Old_Case_Status_Order_Calling</targetReference>
        </connector>
        <filters>
            <field>Id</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>OrderRecord.Case__c</elementReference>
            </value>
        </filters>
        <object>Case</object>
        <outputReference>CaseRecord</outputReference>
        <queriedFields>Id</queriedFields>
        <queriedFields>Status</queriedFields>
        <queriedFields>CaseNumber</queriedFields>
        <queriedFields>Status_Detail__c</queriedFields>
    </recordLookups>
    <recordLookups>
        <name>Get_Case2</name>
        <label>Get Case</label>
        <locationX>491</locationX>
        <locationY>291</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>Set_Old_Case_Status_Case_Calling</targetReference>
        </connector>
        <filters>
            <field>Id</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>CaseID</elementReference>
            </value>
        </filters>
        <object>Case</object>
        <outputReference>CaseRecord</outputReference>
        <queriedFields>Id</queriedFields>
        <queriedFields>Status</queriedFields>
        <queriedFields>CaseNumber</queriedFields>
        <queriedFields>Status_Detail__c</queriedFields>
    </recordLookups>
    <recordLookups>
        <name>Get_Order</name>
        <label>Get Order</label>
        <locationX>493</locationX>
        <locationY>56</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>Get_Case</targetReference>
        </connector>
        <filters>
            <field>Id</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>OrderID</elementReference>
            </value>
        </filters>
        <object>Order</object>
        <outputReference>OrderRecord</outputReference>
        <queriedFields>Id</queriedFields>
        <queriedFields>Count_of_Open_Ship_Lines__c</queriedFields>
        <queriedFields>Count_of_Open_Return_Lines__c</queriedFields>
        <queriedFields>Type</queriedFields>
        <queriedFields>Case__c</queriedFields>
        <queriedFields>Overall_Oracle_Order_Status__c</queriedFields>
        <queriedFields>Oracle_Order_Status__c</queriedFields>
    </recordLookups>
    <recordUpdates>
        <name>Update_Case</name>
        <label>Update Case</label>
        <locationX>1381</locationX>
        <locationY>133</locationY>
        <inputReference>CaseRecord</inputReference>
    </recordUpdates>
    <startElementReference>Case_or_Order_Calling</startElementReference>
    <status>Active</status>
    <textTemplates>
        <name>SummaryText</name>
        <text>http://imaginecommunications.my.salesforce.com/{!CaseID}

Decision:  Case?  {!Case}   Order?   {!Order}
Case#:  {!CaseRecord.CaseNumber}
New Case Status:  {!CaseRecord.Status}
Old Case Status:  {!OldCaseStatus}</text>
    </textTemplates>
    <variables>
        <name>Bailout</name>
        <dataType>Boolean</dataType>
        <isCollection>false</isCollection>
        <isInput>true</isInput>
        <isOutput>true</isOutput>
        <value>
            <booleanValue>false</booleanValue>
        </value>
    </variables>
    <variables>
        <name>CaseID</name>
        <dataType>String</dataType>
        <isCollection>false</isCollection>
        <isInput>true</isInput>
        <isOutput>true</isOutput>
    </variables>
    <variables>
        <name>CaseRecord</name>
        <dataType>SObject</dataType>
        <isCollection>false</isCollection>
        <isInput>true</isInput>
        <isOutput>true</isOutput>
        <objectType>Case</objectType>
    </variables>
    <variables>
        <name>NumberOfOrders</name>
        <dataType>Number</dataType>
        <isCollection>false</isCollection>
        <isInput>true</isInput>
        <isOutput>true</isOutput>
        <scale>0</scale>
        <value>
            <numberValue>0.0</numberValue>
        </value>
    </variables>
    <variables>
        <name>OldCaseStatus</name>
        <dataType>String</dataType>
        <isCollection>false</isCollection>
        <isInput>true</isInput>
        <isOutput>true</isOutput>
    </variables>
    <variables>
        <name>OrderCollection</name>
        <dataType>SObject</dataType>
        <isCollection>true</isCollection>
        <isInput>true</isInput>
        <isOutput>true</isOutput>
        <objectType>Order</objectType>
    </variables>
    <variables>
        <name>OrderID</name>
        <dataType>String</dataType>
        <isCollection>false</isCollection>
        <isInput>true</isInput>
        <isOutput>true</isOutput>
    </variables>
    <variables>
        <name>OrderInLoop</name>
        <dataType>SObject</dataType>
        <isCollection>false</isCollection>
        <isInput>true</isInput>
        <isOutput>true</isOutput>
        <objectType>Order</objectType>
    </variables>
    <variables>
        <name>OrderRecord</name>
        <dataType>SObject</dataType>
        <isCollection>false</isCollection>
        <isInput>true</isInput>
        <isOutput>true</isOutput>
        <objectType>Order</objectType>
    </variables>
    <variables>
        <name>OrderType</name>
        <dataType>String</dataType>
        <isCollection>false</isCollection>
        <isInput>true</isInput>
        <isOutput>true</isOutput>
    </variables>
    <variables>
        <name>ReturnLines</name>
        <dataType>Boolean</dataType>
        <isCollection>false</isCollection>
        <isInput>true</isInput>
        <isOutput>true</isOutput>
        <value>
            <booleanValue>false</booleanValue>
        </value>
    </variables>
    <variables>
        <name>ShipLines</name>
        <dataType>Boolean</dataType>
        <isCollection>false</isCollection>
        <isInput>true</isInput>
        <isOutput>true</isOutput>
        <value>
            <booleanValue>false</booleanValue>
        </value>
    </variables>
    <waits>
        <name>Pause_for_Rollup_Field_Update</name>
        <label>Pause for Rollup Field Update</label>
        <locationX>390</locationX>
        <locationY>60</locationY>
        <defaultConnectorLabel>Default Path</defaultConnectorLabel>
        <waitEvents>
            <name>Pause</name>
            <conditionLogic>and</conditionLogic>
            <connector>
                <targetReference>Get_Order</targetReference>
            </connector>
            <eventType>DateRefAlarmEvent</eventType>
            <inputParameters>
                <name>TimeTableColumnEnumOrId</name>
                <value>
                    <stringValue>Order</stringValue>
                </value>
            </inputParameters>
            <inputParameters>
                <name>TimeFieldColumnEnumOrId</name>
                <value>
                    <stringValue>Scheduled_Update_Time__c</stringValue>
                </value>
            </inputParameters>
            <inputParameters>
                <name>EntityObjectId</name>
                <value>
                    <elementReference>OrderID</elementReference>
                </value>
            </inputParameters>
            <inputParameters>
                <name>TimeOffset</name>
                <value>
                    <numberValue>1.0</numberValue>
                </value>
            </inputParameters>
            <inputParameters>
                <name>TimeOffsetUnit</name>
                <value>
                    <stringValue>Hours</stringValue>
                </value>
            </inputParameters>
            <label>Pause</label>
        </waitEvents>
    </waits>
</Flow>

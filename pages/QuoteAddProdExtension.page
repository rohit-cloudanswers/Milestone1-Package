<apex:page standardController="Quote" extensions="QuoteAddProdClsExtension" action="{!priceBookCheck}" showHeader="false" sidebar="false">

    <apex:sectionHeader Title="Manage Quote Products" subtitle="{!Quote.Name}"/>
    <apex:messages style="color:red"/>

    <style>
        .search{
            font-size:14pt;
            margin-right: 20px;    
        }
        .fyi{
            color:red;
            font-style:italic;
        }
        .label{
            margin-right:10px;
            font-weight:bold;
        }
    </style>
    
    <script type='text/javascript'>
    
        // This script assists the search bar functionality
        // It will execute a search only after the user has stopped typing for more than 1 second
        // To raise the time between when the user stops typing and the search, edit the following variable:
        
        var waitTime = 1;
        
    
        var countDown = waitTime+1;
        var started = false;
        
        function resetTimer(){
        
            countDown=waitTime+1;
            
            if(started==false){
                started=true;
                runCountDown();
            }
        }
        
        function runCountDown(){
        
            countDown--;
            
            if(countDown<=0){
                fetchResults();
                started=false;
            }
            else{
                window.setTimeout(runCountDown,1000);
            }
        }
        function checkAll(cb){
         var inputElem = document.getElementsByTagName("input");
            for(var i=0; i<inputElem.length; i++){
                   inputElem[i].checked = cb.checked;
           }
       }    
    </script>
   
  
    <apex:form >
    
        <apex:outputPanel id="mainBody">
        
            <apex:outputLabel styleClass="label">PriceBook: </apex:outputLabel>
            <apex:outputText value="{!theBook.Name}"/>&nbsp;
         <!--   <apex:commandLink action="{!changePricebook}" value="change" immediate="true"/> -->
            <br/>
            <!-- not everyone is using multi-currency, so this section may or may not show -->
            <apex:outputPanel rendered="{!multipleCurrencies}">
                <apex:outputLabel styleClass="label">Currency: </apex:outputLabel>
                <apex:outputText value="{!chosenCurrency}"/>
                <br/>
            </apex:outputPanel>
            <br/>
<!-- this is the upper table: search bar and search results -->
    
            <apex:pageBlock >
                <apex:pageBlockButtons >
                    <apex:commandButton action="{!onCancel}" value="Cancel" immediate="true"/>
                    <apex:commandButton value="Add to Cart" action="{!addToShoppingCart}" reRender="selected,searchResults">
                        <!-- again we use apex:param to be able to tell the controller which row we are working with -->
                    </apex:commandButton>                    
                </apex:pageBlockButtons>            
                <apex:outputPanel styleClass="search">
                    Search for {!$ObjectType.Product2.LabelPlural}:
                </apex:outputPanel>

                <apex:actionRegion renderRegionOnly="false" immediate="true">
                
                    <apex:actionFunction name="fetchResults" action="{!updateAvailableList}" reRender="searchResults" status="searchStatus"/>
                    
                    <!-- here we invoke the scripting to get out fancy 'no button' search bar to work -->
                    <apex:inputText value="{!searchString}" onkeydown="if(event.keyCode==13){this.blur();}else{resetTimer();}" style="width:300px"/>
                    &nbsp;&nbsp;
                    <i>
                        <!-- actionStatus component makes it easy to let the user know when a search is underway -->
                        <apex:actionStatus id="searchStatus" startText="searching..." stopText=" "/>
                    </i>
                    
                </apex:actionRegion>
            
                <br/>
                <br/>
             
                <apex:outputPanel id="searchResults">
             
                    <apex:pageBlockTable value="{!AvailableProducts2}" var="a">
                        <apex:column >
                            <apex:facet name="header">
                                 <apex:facet name="header">
                                  <apex:inputCheckbox onclick="checkAll(this)"/>
                                 </apex:facet>
                            </apex:facet>
                            <apex:inputCheckbox value="{!a.Selected}"/> 
                        </apex:column>                         
                        <apex:column headerValue="Part Number" value="{!a.pbe.Product2.ProductCode}"/>
                        
                        <apex:column headerValue="Product Name" value="{!a.pbe.Product2.Name}" />
                        
                        <apex:column headerValue="Product Line" value="{!a.pbe.Product2.Product_Line__c}"/>
                        
                        <apex:column headerValue="Product Description" value="{!a.pbe.Product2.Description}"/>
                        
                        <!--
                        <apex:column >
                            
                            <apex:commandButton value="Select" action="{!addToShoppingCart}" reRender="selected,searchResults" immediate="true">
                                <apex:param value="{!a.pbe.Id}" assignTo="{!toSelect}" name="toSelect"/>
                            </apex:commandButton>
                        </apex:column>
                        -->
                    </apex:pageBlockTable>
                    
                    <!-- We put up a warning if results exceed 100 rows -->
                    <apex:outputPanel styleClass="fyi" rendered="{!overLimit}">
                        <br/>
                        Your search returned over 100 results, use a more specific search string if you do not see the desired {!$ObjectType.Product2.Label}.
                        <br/>
                    </apex:outputPanel>
                    
                </apex:outputPanel>
            
            </apex:pageBlock>            
<!-- this is the lower table... a.k.a. the "Shopping Cart"-->


            <apex:pageBlock title="Selected {!$ObjectType.Product2.LabelPlural}" id="selected">
                       
                <apex:pageblockTable value="{!shoppingCart}" var="s">
                
                    <apex:column >
                        <apex:commandLink value="Remove" action="{!removeFromShoppingCart}" reRender="selected,searchResults" immediate="true">
                            <!-- this param is how we send an argument to the controller, so it knows which row we clicked 'remove' on -->
                            <apex:param value="{!s.PriceBookEntryId}" assignTo="{!toUnselect}" name="toUnselect"/>
                        </apex:commandLink>
                    </apex:column>
                    
                    <apex:column headerValue="Product Name" value="{!s.PriceBookEntry.Product2.Name}"/>
                    <apex:column headerValue="Part Number" value="{!s.PriceBookEntry.Product2.ProductCode}"/>
                    <apex:column headerValue="{!$ObjectType.QuoteLineItem.Fields.Quantity.Label}">
                        <apex:inputField value="{!s.Quantity}" style="width:70px" required="true" onkeyup="refreshTotals();"/>
                    </apex:column>
                    
                    <apex:column headerValue="{!$ObjectType.QuoteLineItem.Fields.UnitPrice.Label}" value="{!s.UnitPrice}">
                        <!-- <apex:inputField value="{!s.UnitPrice}" style="width:70px" required="true" onkeyup="refreshTotals();"/> -->
                    </apex:column>
                    
                    <apex:column headerValue="{!$ObjectType.QuoteLineItem.Fields.Description.Label}">
                        <apex:inputField value="{!s.Description}" required="false"/>
                    </apex:column>
                    
                </apex:pageblockTable>
            
            
                <apex:pageBlockButtons >
                    <apex:commandButton action="{!onSave}" value="Save"/>
                    <apex:commandButton action="{!onCancel}" value="Cancel" immediate="true"/>
                </apex:pageBlockButtons>
            
            </apex:pageBlock>
    


            
        </apex:outputPanel>

    </apex:form>

</apex:page>